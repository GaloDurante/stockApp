generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id            Int        @id @default(autoincrement())
  name          String
  description   String?
  category      Category
  stock         Int
  purchasePrice Int
  salePrice     Int
  salePriceBox  Int?
  unitsPerBox   Int        @default(6)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  sellItems     SellItem[]
}

enum Category {
  VINOS_TINTOS
  VINOS_BLANCOS
  VINOS_ROSADOS
  RON
  LICORES
  SIDRAS
  CHAMPAGNES
  CERVEZAS
  VODKA
  WHISKIES
  GASEOSAS
  APERITIVOS
  GIN
  ACCESORIOS
  ALMACEN
}

model Sell {
  id         Int        @id @default(autoincrement())
  date       DateTime
  note       String?
  totalPrice Int
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  items      SellItem[]
  payments   Payment[]

  @@index([date])
}

model SellItem {
  id            Int       @id @default(autoincrement())
  sellId        Int
  productId     Int?
  productName   String
  quantity      Int
  unitPrice     Int
  purchasePrice Int
  isBox         Boolean   @default(false)
  unitsPerBox   Int

  sell        Sell      @relation(fields: [sellId], references: [id], onDelete: Cascade)
  product     Product?  @relation(fields: [productId], references: [id], onDelete: SetNull)
  @@index([sellId])
}

model Payment {
  id         Int           @id @default(autoincrement())
  sellId     Int
  method     PaymentMethod
  amount     Int
  receiver   Receiver?
  createdAt  DateTime      @default(now())

  sell       Sell          @relation(fields: [sellId], references: [id], onDelete: Cascade)
}

enum PaymentMethod {
  Efectivo
  Transferencia
}

enum Receiver {
  Walter
  Yanina
}
